{% extends "base.html.twig" %}

{% block title %}Birks Sida | MVC | Report{% endblock %}

{% block body %}
<main class="main">
<div class="twoColLayout">
    <aside class="leftCol">
        <h3 id="table">Inneh√•llsf√∂rteckning</h3>
        <ul>
            <li><a href="#kmom01">kmom01</a></li>
            <li><a href="#kmom02">kmom02</a></li>
            <li><a href="#kmom03">kmom03</a></li>
            <li><a href="#kmom04">kmom04</a></li>
            <li><a href="#kmom05">kmom05</a></li>
            <li><a href="#kmom06">kmom06</a></li>
            <li><a href="#kmom10">kmom10</a></li>
        </ul>
    </aside>

    <div class="rightCol">
        <h1>V√§lkommen till report-sidan</h1>
        <div class="kmom kmom01" id="kmom01">
        <h3>Kmom01</h3>
        <p>
            Ber√§tta kort om dina f√∂rkunskaper och
            tidigare erfarenheter kring objektorientering.
        </p>
        <p>
            Vad g√§ller f√∂rkunskaper n√§r det kommer till t.ex. klasser
            skulle jag s√§g att jag har en ganska god
            grundl√§ggande f√∂rst√•else f√∂r hur de fungerar och anv√§nds.
            Jag har studerat deras struktur och funktioner mestadels i Python,
            men ocks√• i JavaScript och nu i PHP. N√§r det kommer till direkt
            erfarenhet s√• har jag det till stor del huvudsakligen i Python,
            eftersom vi anv√§nde oss av dem flitigt i OOP-kursen. Jag har dock
            ocks√• arbetat med JavaScript-klasser i kursen DATABAS.
        </p>
        <br>
        <p>
            Ber√§tta kort om PHPs modell f√∂r klasser och objekt.
            Vilka √§r de grunder man beh√∂ver veta/f√∂rst√• f√∂r att
            kunna komma ig√•ng och skapa sina f√∂rsta klasser?
        </p>
        <p>
            En klass i PHP fungerar i princip som en mall, fr√•n vilka man kan
            skapa objekt, eller klassinstanser. Dessa objekt kan vara antingen
            f√∂r√§nderliga, "mutable", eller of√∂r√§nderliga, "immutable", beroende
            p√• klassen de skapats fr√•n; vad jag f√∂rst√•r kan den senare ocks√•
            kallas "readonly", men det √§r jag inte helt s√§ker p√•.
            Ett f√∂r√§nderligt objekt kan f√∂rdelas nya metoder, t.ex. genom
            $foo->bar = function (), och nya medlemsvariabler. √Ö andra sidan
            kan ett of√∂r√§nderligt objekt inte tilldelas ens nya
            medlemsvariabler; om den √§r f√∂dd av en klass som bara har
            medlemsvariabeln "age", kan du inte g√∂ra t.ex. $foo->height = 184.
            En annan viktig detalj att ha till minnes √§r att PHP anv√§nder sig
            av $this som sj√§lvreferens inuti en klass, och inte t.ex. $self.
        </p>
        <br>
        <p>
            Reflektera kort √∂ver den kodbas, koden, strukturen som anv√§ndes
            till uppgiften me/report, hur uppfattar du den?
        </p>
        <p>
            Till att b√∂rja med var det n√•gorlunda √∂verv√§ldigande med alla
            directories och filer som genererades n√§r man f√∂rst instantierade
            Symfony, men nu efterhand s√• √§r det inte alls lika l√§skigt l√§ngre.
            Strukturen f√∂r de olika mapparna √§r begripligt logiska n√§r man
            v√§l suttit och t√§nkt igenom det ett tag. N√•got som jag dock inte
            riktigt har greppat √§nnu √§r var exakt man skall l√§gga till nya
            filer; till exempel skapade jag en ny mapp direkt i assets f√∂r
            att inneh√•lla den JSON jag t√§nkte anv√§nda f√∂r /lucky-sidan. Om det
            finns n√•got s√§rskilt st√§lle den b√∂r vara ist√§llet s√• har jag
            ingen aning. N√•got jag inte h√§ller verkar begripa √§r hur
            man ska l√§sa in JSON direkt i PHP i routerna; jag f√∂rs√∂kte
            ideligen men det blev ett filepath-error hela tiden. M√•nne
            vi l√§r oss hur man g√∂r't senare i kursen.
        </p>
        <br>
        <p>
            Med tanke p√• artikeln ‚ÄúPHP The Right Way‚Äù,
            vilka delar in den finner du extra intressanta och v√§rdefulla?
            √Ñr det n√•gra s√§rskilda omr√•den
            som du k√§nner att du vill veta mer om?
            Lyft fram n√•gra delar av artikeln som du k√§nner mer v√§rdefulla.
        </p>
        <p>
            En av de absolut viktigaste delarna skulle jag s√§ga √§r avsnittet om
            att "escape"-a n√§r man k√∂r SQL med anv√§ndarinput. Det √§r n√•got som
            l√§tt kan √∂versk√•das men som lika l√§tt kan utg√∂ra en av de mest
            f√∂rg√∂rande farh√•gorna f√∂r ens databas och system i helhet.
            Det jag tycker √§r s√§rskilt intressant och som jag definitivt vill
            fokusera mer tid p√• att studera √§r delen om s√§kerhet. Cybers√§kerhet
            √§r ett omr√•de jag tycker √§r extremt fascinerande, och n√•got jag till
            och med skulle kunna t√§nka mig att arbeta med i framtiden. Det m√•
            f√∂rvisso f√∂r√§ndras n√§r jag f√•tt mer erfarenhet i det omr√•det, och
            kanske insett att jag inte tycker om det faktiska arbetet, men f√∂r
            n√§rvarande verkar det helt enkelt coolt. Min personliga √•sikt √§r 
            allts√• att de viktigaste aspekten att bli synnerligen kompetent p√•
            √§r hur man skriver s√§ker kod. Multifunktionalitet och QoL kan komma
            senare, n√§r man f√∂rs√§krat sig om att anv√§ndaren, som ju alltid
            likas√• √§r en kund som en fiende n√§r punkt kommer till pricka, vare
            sig av oaktsamhet eller ondskefullhet, inte kan f√∂rinta allt det
            man jobbat s√• h√•rt f√∂r att bygga upp.
        </p>
        <br>
        <p>
            Vilken √§r din TIL f√∂r detta kmom?
        </p>
        <p>
            TIL att Symfony fungerar n√•got snarlikt Express, och att twig
            √§r snarlikt ejs-filer, vilket √§r en fantastisk l√§ttnad. Det √§r
            mycket enklare att handskas med ny teknologi n√§r man iallafall
            kan k√§nna igen sig n√•gonstans.
        </p>
    </div>
    
    <hr>

    <div>
        <p>
            F√∂rklara kort de objektorienterade konstruktionerna arv,
            komposition, interface och trait och hur de anv√§nds i PHP.
            <br>
            Det s√§gs att en klass √§rver fr√•n en annan n√§r den skapas med den
            andra klassen som mall. Det √§r allts√• ett s√§tt att samla attribut
            och metoder som √§r gemensamma f√∂r ett antal nya klasser du t√§ntke
            skapa. Utifr√•n det grundl√§ggande konceptet av en bil, till exempel,
            kan du skapa en monstertruck, en limousin, en l√•ngtradare, med mera
            Dessa har gemensamma attribut, t.ex. motorer, hjul, och v√§xlar,
            som kan samlas i en enda klass och sedan √§rvas av resten,
            vilket leder till modul√§r och DRY kod.

            Komposition betecknar helt enkelt att den klass √§r beroende
            av en annan f√∂r att existera. Till exempel kan du inte ha
            en kortlek som inte har n√•gra kort i sig; en kortlek √ÑR en
            samling kort, och utan kort s√• existerar inte leken.

            Interface fungerar ungef√§r som en inneh√•llsf√∂rteckning.
            Det beskriver helt enkelt de metoder som anv√§ndaren kan
            f√∂rv√§nta sig skall finnas i en klass. Det finns ingen
            egentlig kod i ett interface; det fungerar enbart
            som ett krav f√∂r var som m√•ste implementeras i klassen.

            Trait √§r likt arv, men p√• s√§tt och vis motsatsen av ett arv.
            Emedan arv betyder att du skapar en klass ur en klass, betyder
            trait att du agglutinerar en grupp metoder till en klass.
            Det fungerar som en kringg√•ng av det faktum att PHP inte
            till√•ter multipla arv; ist√§llet f√∂r att skapa ur, l√§gger man till.
            F√∂r att ge ett exempel kan du t√§nka dig en grundklass Cykel, som
            din underklass Mountainbike √§rver fr√•n. Om du sedan vill skapa en
            motordriven Mountainbike, kan din Mountainbike anv√§nda ett
            Motor-trait. Allts√• √§rver du ur cykel och anv√§nder Motor
            f√∂r att f√• en Mountainbike som ocks√• har Motor-metoder.
        
        </p>
        <br>
        <p>
            Ber√§tta om din implementation fr√•n uppgiften. Hur l√∂ste du
            uppgiften, √§r du n√∂jd/missn√∂jd, vilken f√∂rb√§ttringspotential
            ser du i din koden och dina klasser?
            <br>
            Jag √§r f√∂r det mesta n√∂jd med mina l√∂sningar. Jag valde att l√•ta
            min Card-klass vara det som uppfyllde arvskravet, i likhet med
            GraphicDice-exemplet fr√•n √∂vningarna. GraphicCard fick
            √§rva en constructor och tv√• medlemsvariabler f√∂r att representera
            dess v√§rde och svit, och fick tv√• metoder f√∂r att √•terge dessa.
            CardHand och DeckOfCards inneh√•ller GraphicCards och har metoder
            f√∂r att returnera sina inneh√•ll. DeckOfCards inneh√•ller √§ven
            metoder f√∂r att anv√§nda PHPs inbyggda shuffle() f√∂r att blanda
            kortleken samt draw() som sparar, tar bort, och sedan returnerar
            ett kort fr√•n kortleken.
            <br>
            Vad g√§ller f√∂rb√§ttringspotential vill jag senare implementera en
            metod f√∂r GraphicCard att returnera en UTF8-karakt√§r f√∂r dess
            inneh√•ll, allts√• att den ska kunna returnera t.ex. üÇ° om den har ess
            som v√§rde och spader som svit. Det enklaste s√§ttet √§r troligtvis
            att implementera en key-value array och en metod f√∂r att
            plocka ut r√§tt karakt√§r beroende p√• kortets graphic() och sedan
            returnera det matchande v√§rdet. Dessutom vill jag separera alla
            mina if session_status() till en separat funktion som kan kolla
            sessionsstatusen, och ocks√• l√•ta den ocks√• skapa en ny deck om man
            har med det som argument. Det skulle g√∂ra det hela mycket mer DRY.
            <br>
            Om man ska tala om f√∂rb√§ttringspotential rent generellt vill
            jag forts√§tta implementera de A11Y-l√§rdomarna jag f√•tt fr√•n
            WEBAPP f√∂r att g√∂ra mina sidor mer l√§ttilg√§ngliga och
            anv√§ndarv√§nliga. Men det har ju inte direkt med klasserna
            att g√∂ra.
        </p>
        <br>
        <p>
            Vilka √§r dina reflektioner s√• h√§r l√•ngt med att
            jobba i Symfony med applikationskod enligt MVC?
            <br>
            Det har varit v√§ldigt trevligt att jobba med Symfony. Det var lite
            f√∂rvirrande till att b√∂rja med men jag har blivit v√§ldigt bekv√§m
            med det hela, trots att jag fortfarande inte lyckats l√§ra mig
            i vilka mappar och var man b√∂r f√∂rvara sina egna filer.
            Jag f√∂redrar dessutom betydligt att jobba med tvig √§n r√• html,
            s√§rskilt eftersom man s√• enkelt kan importera separata moduler
            som man kan i php-filer. 

        </p>
        <br>
        <p>
            Vilken √§r din TIL f√∂r detta kmom?
            <br>
            TIL att min vanliga strategi vad g√§ller programmering, det vill
            s√§ga "k√∂r p√• tills n√•got g√•r s√∂nder och studera sen vad du gjorde
            fel", inte fungerade alls lika bra som det brukar n√§r jag jobbade
            med GIT. Jag t√§nkte inte p√• att det skulle vara s√• pass
            permanent, eller iallafall alltf√∂r b√∂kigt att fixa tidigare
            blundrar. L√§xa l√§rd: kanske var lite mindre gung-ho, iallafall
            med nya teknologier.
        </p>        

    </div>
</div>
</main>
{% endblock %}