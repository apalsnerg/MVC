<?xml version="1.0"?>
<phpunit xmlns="https://schema.phpunit.de/coverage/1.0">
  <file name="Bank.php" path="/Cards">
    <totals>
      <lines total="62" comments="23" code="39" executable="15" executed="15" percent="100.00"/>
      <methods count="3" tested="3" percent="100.00"/>
      <functions count="0" tested="0" percent="0"/>
      <classes count="1" tested="1" percent="100.00"/>
      <traits count="0" tested="0" percent="0"/>
    </totals>
    <class name="App\Cards\Bank" start="8" executable="15" executed="15" crap="9">
      <namespace name="App\Cards"/>
      <method name="__construct" signature="__construct()" start="10" end="13" crap="1" executable="1" executed="1" coverage="100"/>
      <method name="handEval" signature="handEval(): string" start="19" end="25" crap="2" executable="3" executed="3" coverage="100"/>
      <method name="evalCard" signature="evalCard(App\Cards\GraphicCard $card): string" start="44" end="60" crap="6" executable="11" executed="11" coverage="100"/>
    </class>
    <coverage>
      <line nr="12">
        <covered by="App\Cards\BankTest::testCreateBank"/>
        <covered by="App\Cards\BankTest::testBankEvalsDraw"/>
        <covered by="App\Cards\BankTest::testBankEvalsFold"/>
        <covered by="App\Cards\BankTest::testBankEvalAceHigh"/>
        <covered by="App\Cards\BankTest::testBankFoldsIfHighScore"/>
        <covered by="App\Cards\BankTest::testBankEvalAceLow"/>
        <covered by="App\Cards\BankTest::testBankDrawsIfLowScore"/>
        <covered by="App\Cards\BankTest::testBankAcceptsLetterCards"/>
        <covered by="App\Cards\GameTest::testGameCreatable"/>
        <covered by="App\Cards\GameTest::testFoldTurnIncrement"/>
        <covered by="App\Cards\GameTest::testEqualBankWins"/>
        <covered by="App\Cards\GameTest::testBankWinsPlayerTooMuch"/>
        <covered by="App\Cards\GameTest::testBankWinsIfMore"/>
        <covered by="App\Cards\GameTest::testBankMoreButTooMuchLoses"/>
        <covered by="App\Cards\GameTest::testPlayerWinsIfMore"/>
        <covered by="App\Cards\GameTest::testBothLose"/>
        <covered by="App\Cards\GameTest::testBankTurnRandom"/>
        <covered by="App\Cards\GameTest::testBankTurnAddsCards"/>
      </line>
      <line nr="21">
        <covered by="App\Cards\BankTest::testBankEvalsDraw"/>
        <covered by="App\Cards\BankTest::testBankEvalsFold"/>
      </line>
      <line nr="22">
        <covered by="App\Cards\BankTest::testBankEvalsDraw"/>
      </line>
      <line nr="24">
        <covered by="App\Cards\BankTest::testBankEvalsFold"/>
      </line>
      <line nr="46">
        <covered by="App\Cards\BankTest::testBankEvalAceHigh"/>
        <covered by="App\Cards\BankTest::testBankFoldsIfHighScore"/>
        <covered by="App\Cards\BankTest::testBankEvalAceLow"/>
        <covered by="App\Cards\BankTest::testBankDrawsIfLowScore"/>
        <covered by="App\Cards\BankTest::testBankAcceptsLetterCards"/>
        <covered by="App\Cards\GameTest::testBankTurnRandom"/>
        <covered by="App\Cards\GameTest::testBankTurnAddsCards"/>
      </line>
      <line nr="47">
        <covered by="App\Cards\BankTest::testBankEvalAceHigh"/>
        <covered by="App\Cards\BankTest::testBankFoldsIfHighScore"/>
        <covered by="App\Cards\BankTest::testBankEvalAceLow"/>
        <covered by="App\Cards\BankTest::testBankDrawsIfLowScore"/>
        <covered by="App\Cards\BankTest::testBankAcceptsLetterCards"/>
        <covered by="App\Cards\GameTest::testBankTurnRandom"/>
        <covered by="App\Cards\GameTest::testBankTurnAddsCards"/>
      </line>
      <line nr="48">
        <covered by="App\Cards\BankTest::testBankEvalAceHigh"/>
        <covered by="App\Cards\BankTest::testBankFoldsIfHighScore"/>
        <covered by="App\Cards\BankTest::testBankEvalAceLow"/>
        <covered by="App\Cards\GameTest::testBankTurnAddsCards"/>
      </line>
      <line nr="49">
        <covered by="App\Cards\BankTest::testBankEvalAceHigh"/>
        <covered by="App\Cards\BankTest::testBankFoldsIfHighScore"/>
        <covered by="App\Cards\BankTest::testBankEvalAceLow"/>
        <covered by="App\Cards\GameTest::testBankTurnAddsCards"/>
      </line>
      <line nr="50">
        <covered by="App\Cards\BankTest::testBankEvalAceHigh"/>
        <covered by="App\Cards\BankTest::testBankFoldsIfHighScore"/>
      </line>
      <line nr="52">
        <covered by="App\Cards\BankTest::testBankDrawsIfLowScore"/>
        <covered by="App\Cards\BankTest::testBankAcceptsLetterCards"/>
        <covered by="App\Cards\GameTest::testBankTurnRandom"/>
        <covered by="App\Cards\GameTest::testBankTurnAddsCards"/>
      </line>
      <line nr="53">
        <covered by="App\Cards\BankTest::testBankAcceptsLetterCards"/>
        <covered by="App\Cards\GameTest::testBankTurnRandom"/>
      </line>
      <line nr="55">
        <covered by="App\Cards\BankTest::testBankEvalAceHigh"/>
        <covered by="App\Cards\BankTest::testBankFoldsIfHighScore"/>
        <covered by="App\Cards\BankTest::testBankEvalAceLow"/>
        <covered by="App\Cards\BankTest::testBankDrawsIfLowScore"/>
        <covered by="App\Cards\BankTest::testBankAcceptsLetterCards"/>
        <covered by="App\Cards\GameTest::testBankTurnRandom"/>
        <covered by="App\Cards\GameTest::testBankTurnAddsCards"/>
      </line>
      <line nr="56">
        <covered by="App\Cards\BankTest::testBankEvalAceHigh"/>
        <covered by="App\Cards\BankTest::testBankFoldsIfHighScore"/>
        <covered by="App\Cards\BankTest::testBankEvalAceLow"/>
        <covered by="App\Cards\BankTest::testBankDrawsIfLowScore"/>
        <covered by="App\Cards\BankTest::testBankAcceptsLetterCards"/>
        <covered by="App\Cards\GameTest::testBankTurnRandom"/>
        <covered by="App\Cards\GameTest::testBankTurnAddsCards"/>
      </line>
      <line nr="57">
        <covered by="App\Cards\BankTest::testBankDrawsIfLowScore"/>
        <covered by="App\Cards\GameTest::testBankTurnRandom"/>
        <covered by="App\Cards\GameTest::testBankTurnAddsCards"/>
      </line>
      <line nr="59">
        <covered by="App\Cards\BankTest::testBankEvalAceHigh"/>
        <covered by="App\Cards\BankTest::testBankFoldsIfHighScore"/>
        <covered by="App\Cards\BankTest::testBankEvalAceLow"/>
        <covered by="App\Cards\BankTest::testBankAcceptsLetterCards"/>
        <covered by="App\Cards\GameTest::testBankTurnRandom"/>
        <covered by="App\Cards\GameTest::testBankTurnAddsCards"/>
      </line>
    </coverage>
    <source>
      <line no="1">
        <token name="T_OPEN_TAG">&lt;?php</token>
      </line>
      <line no="2"/>
      <line no="3">
        <token name="T_NAMESPACE">namespace</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">App\Cards</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="4"/>
      <line no="5">
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="6">
        <token name="T_DOC_COMMENT"> * Class to represent the Bank for the card game.</token>
      </line>
      <line no="7">
        <token name="T_DOC_COMMENT"> */</token>
      </line>
      <line no="8">
        <token name="T_CLASS">class</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Bank</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EXTENDS">extends</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Player</token>
      </line>
      <line no="9">
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="10">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">__construct</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="11">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="12">
        <token name="T_WHITESPACE">        </token>
        <token name="T_STRING">parent</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">__construct</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">"bank"</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="13">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="14"/>
      <line no="15">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="16">
        <token name="T_DOC_COMMENT">     * Method to evaluate whether to draw or to fold.</token>
      </line>
      <line no="17">
        <token name="T_DOC_COMMENT">     * @return string the evaluated option</token>
      </line>
      <line no="18">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="19">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">handEval</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">String</token>
      </line>
      <line no="20">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="21">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">score</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LT">&lt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">18</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="22">
        <token name="T_WHITESPACE">            </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">"draw"</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="23">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="24">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">"fold"</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="25">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="26"/>
      <line no="27">
        <token name="T_WHITESPACE">    </token>
        <token name="T_COMMENT">/*      DEPRECATED</token>
      </line>
      <line no="28">
        <token name="T_COMMENT">    /**</token>
      </line>
      <line no="29">
        <token name="T_COMMENT">     * Method to evaluate whether to use the ace as 11 or 1 points.</token>
      </line>
      <line no="30">
        <token name="T_COMMENT">     *&lt;/</token>
      </line>
      <line no="31">
        <token name="T_COMMENT">    public function evalAce(): void</token>
      </line>
      <line no="32">
        <token name="T_COMMENT">    {</token>
      </line>
      <line no="33">
        <token name="T_COMMENT">        $score = 1;</token>
      </line>
      <line no="34">
        <token name="T_COMMENT">        if ($this-&gt;score &gt; 6 &amp;&amp; $this-&gt;score &lt; 11) {</token>
      </line>
      <line no="35">
        <token name="T_COMMENT">            $score = 11;</token>
      </line>
      <line no="36">
        <token name="T_COMMENT">        }</token>
      </line>
      <line no="37">
        <token name="T_COMMENT">        $this-&gt;score += $score;</token>
      </line>
      <line no="38">
        <token name="T_COMMENT">    }</token>
      </line>
      <line no="39">
        <token name="T_COMMENT">    */</token>
      </line>
      <line no="40"/>
      <line no="41">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="42">
        <token name="T_DOC_COMMENT">     * Method to evaluate a given card and its impact on the Bank's hand.</token>
      </line>
      <line no="43">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="44">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">evalCard</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">GraphicCard</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$card</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">string</token>
      </line>
      <line no="45">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="46">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$score</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$card</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">value</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="47">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$card</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">value</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_EQUAL">==</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">"A"</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="48">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$score</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">1</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="49">
        <token name="T_WHITESPACE">            </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">score</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_GT">&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">6</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_BOOLEAN_AND">&amp;&amp;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">score</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LT">&lt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">11</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="50">
        <token name="T_WHITESPACE">                </token>
        <token name="T_VARIABLE">$score</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">11</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="51">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="52">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ELSEIF">elseif</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">in_array</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$card</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">value</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">"J"</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">"Q"</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">"K"</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="53">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$score</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">10</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="54">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="55">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">score</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_PLUS_EQUAL">+=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">intval</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$score</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="56">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">score</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LT">&lt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">18</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="57">
        <token name="T_WHITESPACE">            </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">"draw"</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="58">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="59">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">"fold"</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="60">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="61">
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="62"/>
    </source>
  </file>
</phpunit>
